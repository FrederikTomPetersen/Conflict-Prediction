get_data_ft_trending_terms()
library("gdeltr2")
get_data_ft_trending_terms()
trendingterms <-get_data_ft_trending_terms()
View(trendingterms)
get_data_ft_v2_api("conflict")
conflict <- get_data_ft_v2_api("conflict")
View(conflict)
conflict <- get_data_ft_v2_api(conflict)
conflict <- get_data_ft_v2_api('conflict')
my_terms <-  c("war", "conflict", "protest", "instability")
df_gkg <-
get_gdelt_codebook_ft_api(code_book = "gkg")
View(df_gkg)
Themes <- df_gkg$idGKGTheme %>%
filter(df_gkg$isMilitaryEvent = T or df_gkg$isAgressionAct = T )
Themes <- df_gkg$idGKGTheme %>%
filter(df_gkg$isMilitaryEvent == T or df_gkg$isAgressionAct == T )
Themes <- df_gkg$idGKGTheme %>%
filter(df_gkg$isMilitaryEvent == T or df_gkg$isAgressionAct == T )
Themes <- df_gkg$idGKGTheme %>%
filter(df_gkg$isMilitaryEvent == T | df_gkg$isAgressionAct == T )
Themes <- df_gkg$idGKGTheme %>%
filter(df_gkg$isMilitaryEvent == T)
library("dplyr")
Themes <- df_gkg$idGKGTheme %>%
filter(df_gkg$isMilitaryEvent == T)
Themes <- df_gkg$idGKGTheme %>%
filter(df_gkg$isMilitaryEvent == TRUE)
Themes <- df_gkg$idGKGTheme %>%
filter(df_gkg$isMilitaryEvent == "TRUE")
str(df_gkg)
Themes <-  df_gkg %>%
select(idGKGTheme, isAgressionAct, isMilitaryEvent) %>%
filter(isAgressionAct == T)
Themes <-  df_gkg %>%
select(idGKGTheme, isAgressionAct, isMilitaryEvent) %>%
filter(isAgressionAct == T | isMilitaryEvent == T)
my_themes <- Themes
my_themes <-  df_gkg %>%
select(idGKGTheme, isAgressionAct, isMilitaryEvent) %>%
filter(isAgressionAct == T | isMilitaryEvent == T)
View(Themes)
my_themes <- Themes$idGKGTheme
my_timespan <- "12 weeks"
my_domains <-  c("nypost.com", "washingtonpost.com", "wsj.com")
get_data_ft_v2_api(terms = my_terms, domains = my_domains,
gkg_themes = my_themes,
modes = c("Artlist"), timespans = my_timespan)
records <- get_data_ft_v2_api(terms = my_terms, domains = my_domains,
gkg_themes = my_themes,
modes = c("Artlist"), timespans = my_timespan)
?get_data_ft_v2_api
records_terms <- get_data_ft_v2_api(terms = my_terms, domains = my_domains,
modes = c("Artlist"), timespans = my_timespan)
my_terms <-  c("war", "conflict", "protest", "instability")
my_themes <- Themes[1:10,]
records <- get_data_ft_v2_api(domains = my_domains,
gkg_themes = my_themes,
modes = c("Artlist"), timespans = my_timespan)
records <- get_data_ft_v2_api(terms = my_terms, domains = my_domains,
gkg_themes = my_themes,
modes = c("Artlist"), timespans = my_timespan)
View(my_themes)
records_terms <- get_data_ft_v2_api(terms = my_terms, domains = my_domains,
modes = c("Artlist"), timespans = my_timespan)
my_themes <- Themes[1:10,]$idGKGTheme
records <- get_data_ft_v2_api(terms = my_terms, domains = my_domains,
gkg_themes = my_themes,
modes = c("Artlist"), timespans = my_timespan)
#
#         Terms
#
sports_terms <-
c('"Brooklyn Nets"', "Caris LeVert", '"Kyrie Irving" Trade', '"Luka Doncic"',
'NBA "Draft Prospect"', '"Jarrett Allen"')
political_terms <-
c('"Bill Perkins"', '"New York City" "City Counsel"')
finance_real_estate_terms <-
c("Eastdil", "Condo Bubble", '"JBG Smith"', '"CPPIB"', "Anbang",
"WeWork", '"Goldman Sachs"' , 'Blackstone "Real Estate"')
other_terms <-
c("Supergoop", '"LNG"', 'Maryland "High School Football"',
'"Jared Kushner"', '"Eddie Huang"')
my_terms <-
c(sports_terms, political_terms, finance_real_estate_terms, other_terms)
#
#     Domains
#
news_domains <-
c("nypost.com", "washingtonpost.com", "wsj.com", "gothamgazette.com")
sports_domains <-
c("espn.com", "netsdaily.com")
finance_real_estate_domains <-
c("realdeal.com", "zerohedge.com", "institutionalinvestor.com", 'pionline.com',
"curbed.com", "archdaily.com")
random_domains <-
c("tmz.com", "snopes.com", "alphr.com", "oilprice.com")
my_domains <-
c(news_domains, sports_domains, finance_real_estate_domains, random_domains)
my_themes <-
c("ECON_WORLDCURRENCIES_CHINESE_YUAN", # stories about china's currency -- god way to find stories about china's economy
"ECON_BUBBLE", # articles about economic bubble
"TAX_FNCACT_BROKER", # articles about brokers of things
"ECON_HOUSING_PRICES", # articls about housing prices
"ECON_BITCOIN", # articles about bitcoin
"ELECTION_FRAUD", # articles about election fraud
"SOC_POINTSOFINTEREST_GOVERNMENT_BUILDINGS", # articles about government buildings
"WB_1277_BANKRUPTCY_AND_LIQUIDATION", # articles about bankruptcy
"WB_639_REPRODUCTIVE_MATERNAL_AND_CHILD_HEALTH", # articles about pregnancy and child health
"WB_2151_CHILD_DEVELOPMENT", # articles about child development
"TAX_FNCACT_BUILDER" # articles about builders
)
set.seed(1234)
random_themes <-
df_gkg %>% pull(idGKGTheme) %>% sample(3)
my_themes <-
c(my_themes, random_themes)
my_ocr <-
c(
"Brooklyn Nets",
"Panerai",
"Four Seasons",
"NBA",
"Goldman Sachs",
"Philadelphia Eagles",
"Supergoop",
"Boston Celtics",
"Big Baller Brand",
"BBB",
"Boston Properties"
)
my_image_tags <-
c("Toy Poodle", # looks for toy poodles
"poodle", # looks for any form of poodle
"commercial building", # looks for an office building
"basketball player", # looks for a professional basketball player
"supermodel" # take a guess :)s
)
my_image_web <-
c(
"Jared Kushner",
"Empire State Building",
"Serena Williams",
"New York City",
"Ivanka Trump",
"Tesla Model 3",
"Jeremy Lin",
"NBA",
"Brooklyn Nets"
)
my_timespan <-
"5 days"
my_trelliscope_parameters <-
list(
rows = 1,
columns = 2,
path = NULL
)
get_data_ft_v2_api(terms = my_terms, domains = my_domains, images_web_tag = my_image_web,
images_tag = my_image_tags, images_ocr = my_ocr, gkg_themes = my_themes,
modes = c("Artlist"), timespans = my_timespan, trelliscope_parameters = my_trelliscope_parameters)
test <- get_data_ft_v2_api(terms = my_terms, domains = my_domains, images_web_tag = my_image_web,
images_tag = my_image_tags, images_ocr = my_ocr, gkg_themes = my_themes,
modes = c("Artlist"), timespans = my_timespan, trelliscope_parameters = my_trelliscope_parameters)
trelliscopeImage
get_data_ft_v2_api(terms = my_terms, domains = my_domains, images_web_tag = my_image_web,
images_tag = my_image_tags, images_ocr = my_ocr, gkg_themes = my_themes,
modes = c("TimelineVolInfo"), timespans = "12 weeks", trelliscope_parameters = my_trelliscope_parameters)
trelliscopeHighcharter
View(trelliscopeImage)
trelliscopeImage
a <- get_data_ft_v2_api(terms = my_terms, domains = my_domains, images_web_tag = my_image_web,
images_tag = my_image_tags, images_ocr = my_ocr, gkg_themes = my_themes,
modes = c("TimelineVolInfo"), timespans = "12 weeks", trelliscope_parameters = my_trelliscope_parameters)
trelliscopeHighcharter
Packages <- c("devtools",
"dplyr",
"caret",
"sf",
"trelliscopejs",
"gdeltr2")
lapply(Packages, library, character.only = TRUE)
a <- get_data_ft_v2_api(terms = my_terms, domains = my_domains, images_web_tag = my_image_web,
images_tag = my_image_tags, images_ocr = my_ocr, gkg_themes = my_themes,
modes = c("TimelineVolInfo"), timespans = "12 weeks", trelliscope_parameters = my_trelliscope_parameters)
trelliscopeHighcharter
trelliscopehighcharter
?get_data_ft_v2_api
terms <- c('"Brooklyn Nets"', '"Donovan Mitchell"', 'Blackston Real Estate', '"Tom Brady"')
web_sites <- c("realdeal.com", "netsdaily.com", "wsj.com", "archdaily.com", "alphr.com")
get_data_ft_v2_api(terms = terms, domains = web_sites, timespans = "28 Weeks")
Example <- get_data_ft_v2_api(terms = terms, domains = web_sites, timespans = "28 Weeks")
Example
plot(Example)
trelliscopeImage(Example)
terms <- c('"war"', '"conflict"', '"protest"', '"instability"')
web_sites <- c("nypost.com", "washingtonpost.com", "wsj.com")
get_data_ft_v2_api(terms = terms, domains = web_sites, timespans = "28 Weeks")
trelliscopeImage
terms <- c('"war"', '"protest"', '"instability"')
web_sites <- c("nypost.com", "washingtonpost.com", "wsj.com")
get_data_ft_v2_api(terms = terms, domains = web_sites, timespans = "28 Weeks")
trelliscopeImage
parse_gkg_mentioned_people(trelliscopeImage)
ocation_codes <-
get_codes_stability_locations()
location_test <-
get_data_locations_instability_api(
location_ids = c("US", "IS", "CA", "TU", "CH", "UK", "IR"),
use_multi_locations = c(T, F),
variable_names = c('instability', 'tone', 'protest', 'conflict'),
time_periods = c('daily'),
nest_data = F,
days_moving_average = NA,
return_wide = T,
return_message = T
)
location_test %>%
dplyr::filter(codeLocation %>% is.na()) %>%
group_by(nameLocation) %>%
summarise_at(.vars = c('instability', 'tone', 'protest', 'conflict'),
funs(mean)) %>%
arrange(desc(instability))
View(location_test)
plot(locations_test$value)
plot(location_test$value)
location_codes <-
get_codes_stability_locations()
location_test <-
get_data_locations_instability_api(
location_ids = c("US", "IS", "CA", "TU", "CH", "UK", "IR"),
use_multi_locations = c(T, F),
variable_names = c('instability', 'tone', 'protest', 'conflict'),
time_periods = c('daily'),
nest_data = F,
days_moving_average = NA,
return_wide = T,
return_message = T
)
View(location_test)
View(trelliscopeImage)
location_test %>%
dplyr::filter(codeLocation %>% is.na()) %>%
group_by(nameLocation) %>%
summarise_at(.vars = c('instability', 'tone', 'protest', 'conflict'),
funs(mean)) %>%
arrange(desc(instability))
?get_data_locations_instability_api
abc <- get_data_locations_instability_api(location_ids = c('US', 'IS', "TU"),
random_locations = NULL,
variable_names = c('instability', 'conflict', 'tone', 'protest', 'artvolnorm'),
visualization = T,
days_moving_average = NA,
time_periods = 'daily',
use_multi_locations = F,
return_wide = T,
nest_data = F,
return_message = T)
abc <- get_data_locations_instability_api(location_ids = c('US', 'IS', "TU"),
random_locations = NULL,
variable_names = c('instability', 'conflict', 'tone', 'protest', 'artvolnorm'),
days_moving_average = NA,
time_periods = 'daily',
use_multi_locations = F,
return_wide = T,
nest_data = F,
return_message = T)
View(abc)
range(abc$value, na.rm = FALSE)
range(abc$value, na.rm = FALSE) %>%
group_by(location_ids)
range(abc$value, na.rm = FALSE) %>%
group_by(abc$nameLocation)
library("tidyverse")
range(abc$value, na.rm = FALSE) %>%
group_by(abc$nameLocation)
clear
